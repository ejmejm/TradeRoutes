plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.0"
}

group = 'io.github.ejmejm'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "fancynpcs"
        url = "https://repo.fancyplugins.de/releases"
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.1-R0.1-SNAPSHOT")
    compileOnly("de.oliver:FancyNpcs:2.2.2")
    implementation("org.xerial:sqlite-jdbc:3.46.0.1")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks.jar {
    manifest {
        attributes["paperweight-mappings-namespace"] = "mojang"
    }
}

tasks {
    runServer {
        downloadPlugins {
            hangar("ViaVersion", "5.0.3")
            // Towny
            url("https://drive.usercontent.google.com/u/0/uc?id=1RS7dknkoxGDJdermOn4_dIQye4dC7syg&export=download")
            // Towny Chat
            url("https://drive.usercontent.google.com/u/0/uc?id=1o7l8QKF9JwC8zxZvmDmkW_VyDEbD7Bw2&export=download")
            // FancyNpcs
            modrinth("fancynpcs", "2.2.2")
        }

        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.21.1")
        jvmArgs("-Dcom.mojang.eula.agree=true")
    }
}